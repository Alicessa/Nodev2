/*!
 * @jsmini/is 0.8.5 (https://github.com/jsmini/is)
 * API https://github.com/jsmini/is/blob/master/doc/api.md
 * Copyright 2017-2019 jsmini. All Rights Reserved
 * Licensed under MIT (https://github.com/jsmini/is/blob/master/LICENSE)
 */

import { type } from '@jsmini/type';

function isInRange(x, min, max) {
  x = +x;
  min = +min;
  max = +max; // x 不是数字，则返回false

  if (isNaN(x)) return false; // min 或 max 不传，则认为不设置下限或上限

  return (!isNaN(min) ? x >= min : true) && (!isNaN(max) ? x <= max : true);
}
function isNumber(x, min, max) {
  return type(x) === 'number' && isInRange(x, min, max);
}
function isInteger(x, min, max) {
  return parseInt(x, 10) === x && isInRange(x, min, max);
}
function isInt(x) {
  // -2^31 ~ 2^31-1
  return isInteger(x, -2147483648, 2147483647);
}
function isBoolean(x) {
  return type(x) === 'boolean';
}
function isString(x) {
  return type(x) === 'string';
}
function isEmptyString(x) {
  if (!isString(x)) return false;
  return /^\s*$/.test(x);
}
function isNull(x) {
  return type(x) === 'null';
}
function isUndefined(x) {
  return type(x) === 'undefined';
}
function isObject(x) {
  return type(x) === 'object';
}
function isFunction(x) {
  return type(x) === 'function';
}
var isArray = isFunction(Array.isArray) ? Array.isArray : function isArray(x) {
  return type(x) === 'array';
};

export { isInRange, isNumber, isInteger, isInt, isBoolean, isString, isEmptyString, isNull, isUndefined, isObject, isFunction, isArray };
